======================================================
WARNING: possible circular locking dependency detected
6.8.0 #1 Not tainted
------------------------------------------------------
kworker/u6:10/35147 is trying to acquire lock:
ffff8880157e1840 (&rl->lock){++++}-{3:3}, at: ntfs_read_block+0x2ce/0xc00 fs/ntfs/aops.c:242

but task is already holding lock:
ffff8880157e3f90 (&ni->mrec_lock){+.+.}-{3:3}, at: map_mft_record+0x2e/0x260 fs/ntfs/mft.c:154

which lock already depends on the new lock.


the existing dependency chain (in reverse order) is:

-> #1 (&ni->mrec_lock){+.+.}-{3:3}:
       lock_acquire+0xcb/0x1d0 kernel/locking/lockdep.c:5754
       __mutex_lock_common kernel/locking/mutex.c:608 [inline]
       __mutex_lock+0x7b/0x850 kernel/locking/mutex.c:752
       map_mft_record+0x2e/0x260 fs/ntfs/mft.c:154
       ntfs_truncate+0x104/0x1080 fs/ntfs/inode.c:2383
       ntfs_truncate_vfs fs/ntfs/inode.c:2864 [inline]
       ntfs_setattr+0x1b9/0x240 fs/ntfs/inode.c:2916
       notify_change+0x612/0x6a0 fs/attr.c:499
       do_truncate+0xdc/0x110 fs/open.c:66
       handle_truncate fs/namei.c:3303 [inline]
       do_open fs/namei.c:3649 [inline]
       path_openat+0x1390/0x1680 fs/namei.c:3802
       do_filp_open+0xb9/0x1a0 fs/namei.c:3829
       do_sys_openat2+0x91/0x100 fs/open.c:1404
       do_sys_open fs/open.c:1419 [inline]
       __do_sys_creat fs/open.c:1495 [inline]
       __se_sys_creat fs/open.c:1489 [inline]
       __x64_sys_creat+0x4b/0x70 fs/open.c:1489
       do_syscall_x64 arch/x86/entry/common.c:52 [inline]
       do_syscall_64+0x82/0x150 arch/x86/entry/common.c:83
       entry_SYSCALL_64_after_hwframe+0x63/0x6b

-> #0 (&rl->lock){++++}-{3:3}:
       check_prev_add kernel/locking/lockdep.c:3134 [inline]
       check_prevs_add kernel/locking/lockdep.c:3253 [inline]
       validate_chain+0xc3c/0x2210 kernel/locking/lockdep.c:3869
       __lock_acquire+0x931/0xc10 kernel/locking/lockdep.c:5137
       lock_acquire+0xcb/0x1d0 kernel/locking/lockdep.c:5754
       down_read+0x57/0x400 kernel/locking/rwsem.c:1526
       ntfs_read_block+0x2ce/0xc00 fs/ntfs/aops.c:242
       filemap_read_folio+0xc2/0x4b0 mm/filemap.c:2324
       do_read_cache_folio+0x1ef/0x560 mm/filemap.c:3703
       do_read_cache_page mm/filemap.c:3769 [inline]
       read_cache_page+0x30/0x150 mm/filemap.c:3778
       read_mapping_page include/linux/pagemap.h:888 [inline]
       ntfs_map_page fs/ntfs/aops.h:75 [inline]
       ntfs_sync_mft_mirror+0xb2/0xe80 fs/ntfs/mft.c:480
       write_mft_record_nolock+0x93c/0xc20 fs/ntfs/mft.c:787
       write_mft_record fs/ntfs/mft.h:95 [inline]
       __ntfs_write_inode+0x347/0x560 fs/ntfs/inode.c:3052
       write_inode fs/fs-writeback.c:1473 [inline]
       __writeback_single_inode+0x27a/0x310 fs/fs-writeback.c:1690
       writeback_sb_inodes+0x3e0/0x820 fs/fs-writeback.c:1916
       __writeback_inodes_wb+0x66/0x160 fs/fs-writeback.c:1987
       wb_writeback+0x1f0/0x390 fs/fs-writeback.c:2094
       wb_check_start_all fs/fs-writeback.c:2220 [inline]
       wb_do_writeback fs/fs-writeback.c:2246 [inline]
       wb_workfn+0x359/0x620 fs/fs-writeback.c:2279
       process_one_work kernel/workqueue.c:2633 [inline]
       process_scheduled_works+0x377/0x6d0 kernel/workqueue.c:2706
       worker_thread+0x3d2/0x5e0 kernel/workqueue.c:2787
       kthread+0x141/0x180 kernel/kthread.c:388
       ret_from_fork+0x44/0x50 arch/x86/kernel/process.c:147
       ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:243

other info that might help us debug this:

 Possible unsafe locking scenario:

       CPU0                    CPU1
       ----                    ----
  lock(&ni->mrec_lock);
                               lock(&rl->lock);
                               lock(&ni->mrec_lock);
  rlock(&rl->lock);

 *** DEADLOCK ***

4 locks held by kworker/u6:10/35147:
 #0: ffff88804167e538 ((wq_completion)writeback){+.+.}-{0:0}, at: process_one_work kernel/workqueue.c:2608 [inline]
 #0: ffff88804167e538 ((wq_completion)writeback){+.+.}-{0:0}, at: process_scheduled_works+0x32d/0x6d0 kernel/workqueue.c:2706
 #1: ffffc90002007e38 ((work_completion)(&(&wb->dwork)->work)){+.+.}-{0:0}, at: process_one_work kernel/workqueue.c:2608 [inline]
 #1: ffffc90002007e38 ((work_completion)(&(&wb->dwork)->work)){+.+.}-{0:0}, at: process_scheduled_works+0x32d/0x6d0 kernel/workqueue.c:2706
 #2: ffff88802a2ba0e0 (&type->s_umount_key#98){++++}-{3:3}, at: super_trylock_shared+0x19/0xa0 fs/super.c:561
 #3: ffff8880157e3f90 (&ni->mrec_lock){+.+.}-{3:3}, at: map_mft_record+0x2e/0x260 fs/ntfs/mft.c:154

stack backtrace:
CPU: 1 PID: 35147 Comm: kworker/u6:10 Not tainted 6.8.0 #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Workqueue: writeback wb_workfn (flush-7:0)
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xea/0x170 lib/dump_stack.c:106
 check_noncircular+0x106/0x130 kernel/locking/lockdep.c:2187
 check_prev_add kernel/locking/lockdep.c:3134 [inline]
 check_prevs_add kernel/locking/lockdep.c:3253 [inline]
 validate_chain+0xc3c/0x2210 kernel/locking/lockdep.c:3869
 __lock_acquire+0x931/0xc10 kernel/locking/lockdep.c:5137
 lock_acquire+0xcb/0x1d0 kernel/locking/lockdep.c:5754
 down_read+0x57/0x400 kernel/locking/rwsem.c:1526
 ntfs_read_block+0x2ce/0xc00 fs/ntfs/aops.c:242
 filemap_read_folio+0xc2/0x4b0 mm/filemap.c:2324
 do_read_cache_folio+0x1ef/0x560 mm/filemap.c:3703
 do_read_cache_page mm/filemap.c:3769 [inline]
 read_cache_page+0x30/0x150 mm/filemap.c:3778
 read_mapping_page include/linux/pagemap.h:888 [inline]
 ntfs_map_page fs/ntfs/aops.h:75 [inline]
 ntfs_sync_mft_mirror+0xb2/0xe80 fs/ntfs/mft.c:480
 write_mft_record_nolock+0x93c/0xc20 fs/ntfs/mft.c:787
 write_mft_record fs/ntfs/mft.h:95 [inline]
 __ntfs_write_inode+0x347/0x560 fs/ntfs/inode.c:3052
 write_inode fs/fs-writeback.c:1473 [inline]
 __writeback_single_inode+0x27a/0x310 fs/fs-writeback.c:1690
 writeback_sb_inodes+0x3e0/0x820 fs/fs-writeback.c:1916
 __writeback_inodes_wb+0x66/0x160 fs/fs-writeback.c:1987
 wb_writeback+0x1f0/0x390 fs/fs-writeback.c:2094
 wb_check_start_all fs/fs-writeback.c:2220 [inline]
 wb_do_writeback fs/fs-writeback.c:2246 [inline]
 wb_workfn+0x359/0x620 fs/fs-writeback.c:2279
 process_one_work kernel/workqueue.c:2633 [inline]
 process_scheduled_works+0x377/0x6d0 kernel/workqueue.c:2706
 worker_thread+0x3d2/0x5e0 kernel/workqueue.c:2787
 kthread+0x141/0x180 kernel/kthread.c:388
 ret_from_fork+0x44/0x50 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:243
 </TASK>
