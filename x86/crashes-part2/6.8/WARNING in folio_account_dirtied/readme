Bug 类型
​​内核警告（WARNING）​​，由 ​​文件系统生命周期管理问题​​ 导致，具体是 ​​在 inode 已无效化后仍试图标记页面为脏​​。

触发条件与根本原因分析
调用栈清晰地展示了问题发生的路径：

1.
​​操作上下文​​：用户进程 syz.4.13752 正在退出（do_exit -> do_group_exit），这触发了文件系统的卸载流程。

•
cleanup_mnt -> deactivate_locked_super -> ​​gfs2_kill_sb​​
2.
​​GFS2 文件系统卸载​​：在 GFS2 文件系统卸载例程 gfs2_kill_sb 中，它需要执行日志刷新（journal flush）操作：

•
gfs2_log_flush -> lops_after_commit -> buf_lo_after_commit -> ​​gfs2_unpin​​
3.
​​致命操作​​：在 gfs2_unpin 函数中，代码试图​​标记缓冲区为脏​​（mark_buffer_dirty），这最终会调用 __folio_mark_dirty 和 folio_account_dirtied。

4.
​​警告触发点​​：在 folio_account_dirtied 函数中（mm/page-writeback.c:2618），代码需要获取与该内存页关联的 inode 的回写状态（inode_to_wb）。然而，​​此时 inode 可能已经处于正在被销毁或已销毁的状态​​（因为文件系统正在被卸载），其回写控制结构（backing_dev_info）可能已经无效或为空。

5.
​​根本原因​​：GFS2 的日志卸载逻辑（buf_lo_after_commit -> gfs2_unpin）在文件系统卸载的后期​​仍然尝试对缓冲区进行脏页记账操作​​，而此时支撑这些操作的内核基础设施（inode 和其回写状态）可能已经部分被销毁或处于不一致的状态。这违反了“先停止所有IO操作，再销毁数据结构”的生命周期管理原则。